{"version":3,"file":"content.65bed33ebb75edeee6f4.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;AAA4D;AAAA,IAEvCC,eAAe;EAWhC,SAAAA,gBAAA,EAAc;IAAAC,6FAAA,OAAAD,eAAA;IACZ;IACA,IAAIA,eAAe,CAACE,QAAQ,EAAE;MAC5B,OAAOF,eAAe,CAACE,QAAQ;IACjC;;IAEA;IACA,IAAI,CAACC,MAAM,GAAG,IAAI,CAACC,gBAAgB,CAAC,CAAC;IAErC,IAAI,CAACC,WAAW,GAAG,KAAK;;IAExB;IACA,IAAI,CAACC,oBAAoB,CAAC,CAAC;;IAE3B;IACAN,eAAe,CAACE,QAAQ,GAAG,IAAI;EACjC;;EAEA;EAAA,OAAAK,0FAAA,CAAAP,eAAA;IAAAQ,GAAA;IAAAC,KAAA,EACA,SAAAL,gBAAgBA,CAAA,EAAG;MACjB;MACA,IAAI,OAAOM,MAAM,KAAK,WAAW,EAAE;QACjC;QACA,IAAI,OAAOX,+EAAM,KAAK,UAAU,EAAE;UAChC,OAAO,IAAIA,+EAAM,CAAC,CAAC;QACrB;;QAEA;QACA,IAAIW,MAAM,CAACX,MAAM,EAAE;UACjB,OAAO,IAAIW,MAAM,CAACX,MAAM,CAAC,CAAC;QAC5B;MACF;;MAEA;MACAY,OAAO,CAACC,KAAK,CAAC,iEAAiE,CAAC;MAChF,OAAO,IAAI;IACb;;IAEA;EAAA;IAAAJ,GAAA;IAAAC,KAAA,EACA,SAAAH,oBAAoBA,CAAA,EAAG;MAAA,IAAAO,KAAA;MACrB;MACA,IAAI,CAAC,IAAI,CAACV,MAAM,EAAE;QAChBQ,OAAO,CAACG,IAAI,CAAC,wDAAwD,CAAC;QACtE;MACF;MAEA,IAAI,CAACX,MAAM,CAACY,WAAW,CAAC;QACtBC,OAAO,EAAE,CAAC,OAAO,EAAE,MAAM,CAAC;QAC1BC,MAAM,EAAE,SAARA,MAAMA,CAAA,EAAQ;UACZN,OAAO,CAACO,GAAG,CAAC,4BAA4B,CAAC;UACzC;UACAL,KAAI,CAACV,MAAM,CAACgB,GAAG,CAAC,6BAA6B,CAAC;QAChD;MACF,CAAC,CAAC;MACFR,OAAO,CAACO,GAAG,CAAC,oDAAoD,CAAC;IACnE;;IAEA;EAAA;IAAAV,GAAA;IAAAC,KAAA,EACA,SAAAW,cAAcA,CAAA,EAAG;MAAA,IAAAC,MAAA;MACf;MACA,IAAI,CAAC,IAAI,CAAClB,MAAM,EAAE;QAChBQ,OAAO,CAACC,KAAK,CAAC,gDAAgD,CAAC;QAC/D,OAAOU,iFAAc,CAAC,IAAIE,KAAK,CAAC,kCAAkC,CAAC,CAAC;MACtE;;MAEA;MACA,IAAI,IAAI,CAACnB,WAAW,EAAE;QACpBM,OAAO,CAACG,IAAI,CAAC,uCAAuC,CAAC;QACrD,OAAOQ,kFAAe,CAAC,CAAC;MAC1B;;MAEA;MACA,OAAO,IAAAA,0EAAA,CAAY,UAACG,OAAO,EAAEF,MAAM,EAAK;QACtC;QACA,IAAI,OAAOG,SAAS,KAAK,WAAW,IAAI,CAACA,SAAS,CAACC,WAAW,EAAE;UAC9DJ,MAAM,CAAC,IAAIC,KAAK,CAAC,mDAAmD,CAAC,CAAC;UACtE;QACF;;QAEA;QACAE,SAAS,CAACC,WAAW,CAACC,KAAK,CAAC;UAAEC,IAAI,EAAE;QAAa,CAAC,CAAC,CAChDC,IAAI,CAAC,UAACC,gBAAgB,EAAK;UAC1B,QAAOA,gBAAgB,CAACC,KAAK;YAC3B,KAAK,SAAS;cACZX,MAAI,CAACY,2BAA2B,CAACR,OAAO,EAAEF,MAAM,CAAC;cACjD;YACF,KAAK,QAAQ;cACXF,MAAI,CAACa,2BAA2B,CAACT,OAAO,EAAEF,MAAM,CAAC;cACjD;YACF,KAAK,QAAQ;cACXF,MAAI,CAACc,sBAAsB,CAACZ,MAAM,CAAC;cACnC;UACJ;QACF,CAAC,CAAC,SACI,CAAC,UAACX,KAAK,EAAK;UAChBD,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;UAChDS,MAAI,CAACc,sBAAsB,CAACZ,MAAM,CAAC;QACrC,CAAC,CAAC;MACN,CAAC,CAAC;IACJ;;IAEA;IACA;EAAA;IAAAf,GAAA;IAAAC,KAAA,EACA,SAAA2B,aAAaA,CAAA,EAAG;MAAA,IAAAC,MAAA;MACd;MACA,IAAI,CAAC,IAAI,CAAClC,MAAM,EAAE;QAChBQ,OAAO,CAACC,KAAK,CAAC,+CAA+C,CAAC;QAC9D,OAAOU,iFAAc,CAAC,IAAIE,KAAK,CAAC,kCAAkC,CAAC,CAAC;MACtE;;MAEA;MACA,IAAI,CAAC,IAAI,CAACnB,WAAW,EAAE;QACrBM,OAAO,CAACG,IAAI,CAAC,6CAA6C,CAAC;QAC3D,OAAOQ,kFAAe,CAAC,CAAC;MAC1B;MAEA,OAAO,IAAI,CAACnB,MAAM,CAACmC,QAAQ,CAAC,CAAC,CAC1BR,IAAI,CAAC,YAAM;QACVO,MAAI,CAAChC,WAAW,GAAG,KAAK;QACxBM,OAAO,CAACO,GAAG,CAAC,yCAAyC,CAAC;QACtDmB,MAAI,CAACE,uBAAuB,CAAC,gCAAgC,CAAC;MAChE,CAAC,CAAC,SACI,CAAC,UAACC,GAAG,EAAK;QACd7B,OAAO,CAACC,KAAK,CAAC,oCAAoC,EAAE4B,GAAG,CAACC,OAAO,CAAC;QAChEJ,MAAI,CAACK,qBAAqB,CAAC,mCAAmC,CAAC;MACjE,CAAC,CAAC;IACN;;IAEA;EAAA;IAAAlC,GAAA;IAAAC,KAAA,EACA,SAAAkC,eAAeA,CAAA,EAAG;MAChB,OAAO,IAAI,CAACtC,WAAW,GAAG,IAAI,CAAC+B,aAAa,CAAC,CAAC,GAAG,IAAI,CAAChB,cAAc,CAAC,CAAC;IACxE;;IAEA;EAAA;IAAAZ,GAAA;IAAAC,KAAA,EACA,SAAA8B,uBAAuBA,CAACE,OAAO,EAAE;MAC/B;MACA9B,OAAO,CAACO,GAAG,WAAA0B,MAAA,CAAMH,OAAO,CAAE,CAAC;MAC3B;IACF;EAAC;IAAAjC,GAAA;IAAAC,KAAA,EAED,SAAAiC,qBAAqBA,CAACD,OAAO,EAAE;MAC7B;MACA9B,OAAO,CAACC,KAAK,WAAAgC,MAAA,CAAMH,OAAO,CAAE,CAAC;MAC7B;IACF;;IAEA;EAAA;IAAAjC,GAAA;IAAAC,KAAA,EACA,SAAA0B,sBAAsBA,CAACZ,MAAM,EAAE;MAC7B,IAAMsB,YAAY,wNAMjB;MAEDlC,OAAO,CAACC,KAAK,CAACiC,YAAY,CAAC;MAC3B,IAAI,CAACH,qBAAqB,CAACG,YAAY,CAAC;;MAExC;MACAtB,MAAM,CAAC,IAAIC,KAAK,CAAC,0BAA0B,CAAC,CAAC;IAC/C;;IAEA;EAAA;IAAAhB,GAAA;IAAAC,KAAA,EACA,SAAAqC,iBAAiBA,CAAA,EAAG;MAClB,OAAO,IAAI,CAACzC,WAAW;IACzB;EAAC;IAAAG,GAAA;IAAAC,KAAA;IA9KD;IACA,SAAOsC,WAAWA,CAAA,EAAG;MACnB,IAAI,CAAC,IAAI,CAAC7C,QAAQ,EAAE;QAClB,IAAI,CAACA,QAAQ,GAAG,IAAIF,eAAe,CAAC,CAAC;MACvC;MACA,OAAO,IAAI,CAACE,QAAQ;IACtB;EAAC;AAAA;AAAA8C,6FAAA,CATgBhD,eAAe,cACd,IAAI;;;;;;;;;UCH1B","sources":["webpack://tean-mate/./2-features/STT/ArtyomHandller.js","webpack://tean-mate/webpack/runtime/getFullHash"],"sourcesContent":["import Artyom from '/node_modules/artyom.js/build/artyom.js'\n\nexport default class ArtyomAssistant {\n    static instance = null;\n    \n    // Singleton pattern ensures only one instance exists\n    static getInstance() {\n      if (!this.instance) {\n        this.instance = new ArtyomAssistant();\n      }\n      return this.instance;\n    }\n  \n    constructor() {\n      // Prevent multiple instantiations\n      if (ArtyomAssistant.instance) {\n        return ArtyomAssistant.instance;\n      }\n  \n      // Robust initialization of Artyom with fallback and environment checks\n      this.artyom = this.initializeArtyom();\n\n      this.isListening = false;\n      \n      // Set up a default help command\n      this.setupDefaultCommands();\n      \n      // Store the instance\n      ArtyomAssistant.instance = this;\n    }\n  \n    // Safe Artyom initialization method\n    initializeArtyom() {\n      // Check if we're in a browser environment\n      if (typeof window !== 'undefined') {\n        // First, try the imported Artyom\n        if (typeof Artyom === 'function') {\n          return new Artyom();\n        }\n        \n        // Fallback to window.Artyom if available\n        if (window.Artyom) {\n          return new window.Artyom();\n        }\n      }\n      \n      // If no Artyom is available, log an error and return null\n      console.error('Artyom speech recognition is not available in this environment.');\n      return null;\n    }\n  \n    // Modify existing methods to check for artyom initialization\n    setupDefaultCommands() {\n      // Only set up commands if Artyom is initialized\n      if (!this.artyom) {\n        console.warn('Cannot set up default commands: Artyom not initialized');\n        return;\n      }\n\n      this.artyom.addCommands({\n        indexes: [\"hello\", \"help\"],\n        action: () => {\n          console.log(\"Default command triggered!\");\n          // Optionally speak a response\n          this.artyom.say(\"How can I assist you today?\");\n        }\n      });\n      console.log(\"ArtyomAssistant initialized with default commands.\");\n    }\n  \n    // Modify startListening to handle potential Artyom absence\n    startListening() {\n      // Check if Artyom is initialized\n      if (!this.artyom) {\n        console.error('Cannot start listening: Artyom not initialized');\n        return Promise.reject(new Error('Speech recognition not available'));\n      }\n\n      // Check if already listening to prevent duplicate initialization\n      if (this.isListening) {\n        console.warn(\"Speech recognition is already active.\");\n        return Promise.resolve();\n      }\n  \n      // Return a promise to handle async permission and initialization\n      return new Promise((resolve, reject) => {\n        // Ensure browser environment supports necessary APIs\n        if (typeof navigator === 'undefined' || !navigator.permissions) {\n          reject(new Error('Browser does not support required permissions API'));\n          return;\n        }\n\n        // First, check microphone permissions\n        navigator.permissions.query({ name: 'microphone' })\n          .then((permissionStatus) => {\n            switch(permissionStatus.state) {\n              case 'granted':\n                this.initializeSpeechRecognition(resolve, reject);\n                break;\n              case 'prompt':\n                this.requestMicrophonePermission(resolve, reject);\n                break;\n              case 'denied':\n                this.handleMicrophoneDenied(reject);\n                break;\n            }\n          })\n          .catch((error) => {\n            console.error('Permission check failed:', error);\n            this.handleMicrophoneDenied(reject);\n          });\n      });\n    }\n  \n    // Other methods remain largely the same, but add checks for this.artyom\n    // For example, in stopListening:\n    stopListening() {\n      // Check if Artyom is initialized\n      if (!this.artyom) {\n        console.error('Cannot stop listening: Artyom not initialized');\n        return Promise.reject(new Error('Speech recognition not available'));\n      }\n\n      // Check if already stopped\n      if (!this.isListening) {\n        console.warn(\"Speech recognition is not currently active.\");\n        return Promise.resolve();\n      }\n  \n      return this.artyom.fatality()\n        .then(() => {\n          this.isListening = false;\n          console.log(\"Speech recognition stopped successfully\");\n          this.showSuccessNotification(\"Speech recognition deactivated\");\n        })\n        .catch((err) => {\n          console.error(\"Error stopping speech recognition:\", err.message);\n          this.showErrorNotification(\"Could not stop speech recognition\");\n        });\n    }\n  \n    // Toggle listening state\n    toggleListening() {\n      return this.isListening ? this.stopListening() : this.startListening();\n    }\n  \n    // User notification methods (can be customized)\n    showSuccessNotification(message) {\n      // Implement your preferred notification method\n      console.log(`✅ ${message}`);\n      // Could use browser notifications, custom UI, or voice feedback\n    }\n  \n    showErrorNotification(message) {\n      // Implement your preferred error notification method\n      console.error(`❌ ${message}`);\n      // Could use browser notifications, custom UI, or voice feedback\n    }\n  \n    // Handle microphone permission denial\n    handleMicrophoneDenied(reject) {\n      const errorMessage = `\n        Microphone access is required for Speech-to-Text.\n        Please:\n        1. Check your browser settings\n        2. Ensure microphone permissions are granted\n        3. Reload the extension\n      `;\n      \n      console.error(errorMessage);\n      this.showErrorNotification(errorMessage);\n      \n      // Reject the promise to signal initialization failure\n      reject(new Error('Microphone access denied'));\n    }\n  \n    // Getter for listening state\n    isArtyomListening() {\n      return this.isListening;\n    }\n  }","__webpack_require__.h = () => (\"b9838c9f879a5aa93842\")"],"names":["Artyom","ArtyomAssistant","_classCallCheck","instance","artyom","initializeArtyom","isListening","setupDefaultCommands","_createClass","key","value","window","console","error","_this","warn","addCommands","indexes","action","log","say","startListening","_this2","_Promise","reject","Error","resolve","navigator","permissions","query","name","then","permissionStatus","state","initializeSpeechRecognition","requestMicrophonePermission","handleMicrophoneDenied","stopListening","_this3","fatality","showSuccessNotification","err","message","showErrorNotification","toggleListening","concat","errorMessage","isArtyomListening","getInstance","_defineProperty","default"],"sourceRoot":""}