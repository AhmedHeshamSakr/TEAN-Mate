{"version":3,"file":"content.64c8c15d57ae602802f8.hot-update.js","mappings":"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","sources":["webpack://tean-mate/./4-content/content.js","webpack://tean-mate/webpack/runtime/getFullHash"],"sourcesContent":["import HighlightBox from \"../2-features/TTS/HighlightBox.js\";\nimport TextExtractor from \"../2-features/TTS/TextExtractor.js\";\nimport SpeechHandler from \"../2-features/TTS/SpeechHandler.js\";\nimport LinkHandler from \"../2-features/TTS/LinkHandler.js\";\n\nclass AccessibilityContentHandler {\n    constructor() {\n        // Core state management for content navigation and speech\n        this.state = {\n            currentIndex: 0,\n            currentElement: null\n        };\n\n        // Initialize utility classes for different accessibility features\n        this.utilities = {\n            highlightBox: new HighlightBox(),\n            textExtractor: new TextExtractor(),\n            speechHandler: new SpeechHandler(),\n            linkHandler: new LinkHandler()\n        };\n\n        // Collect all potential readable elements\n        this.elements = Array.from(document.body.querySelectorAll('*'));\n\n        // Set up message listener for cross-component communication\n        this.setupMessageListener();\n    }\n\n    // Configure message listening for accessibility actions\n    setupMessageListener() {\n        chrome.runtime.onMessage.addListener(this.handleAccessibilityAction.bind(this));\n    }\n\n    // Find the next readable element\n    getNextReadableElement(startIndex) {\n        for (let i = startIndex; i < this.elements.length; i++) {\n            const element = this.elements[i];\n            if (this.isElementVisible(element)) {\n                const text = this.utilities.textExtractor.extractText(element);\n                if (text.trim()) {\n                    this.state.currentIndex = i;\n                    return { element, text };\n                }\n            }\n        }\n        return null;\n    }\n\n    // Find the previous readable element\n    getPreviousReadableElement(startIndex) {\n        for (let i = startIndex - 1; i >= 0; i--) {\n            const element = this.elements[i];\n            if (this.isElementVisible(element)) {\n                const text = this.utilities.textExtractor.extractText(element);\n                if (text.trim()) {\n                    this.state.currentIndex = i;\n                    return { element, text };\n                }\n            }\n        }\n        return null;\n    }\n\n    // Speak the current section with visual highlighting\n    speakCurrentSection() {\n        if (!this.state.currentElement) {\n            this.state.currentElement = this.getNextReadableElement(this.state.currentIndex);\n        }\n\n        if (!this.state.currentElement) {\n            console.log(\"No more content to read\");\n            return;\n        }\n\n        const { element, text } = this.state.currentElement;\n\n        this.utilities.highlightBox.addHighlight(element);\n        this.utilities.speechHandler.speak(text, () => {\n            this.utilities.highlightBox.removeHighlight(element);\n            this.state.currentIndex++;\n            this.state.currentElement = null;\n            this.speakCurrentSection();\n        });\n    }\n\n    // Handle various accessibility actions\n    handleAccessibilityAction(request) {\n        const actionMap = {\n            \"extractText\": () => {\n                this.state.currentIndex = 0;\n                this.state.currentElement = null;\n                this.speakCurrentSection();\n            },\n            \"skipNext\": () => {\n                this.utilities.speechHandler.stop();\n                this.utilities.highlightBox.removeHighlight(this.state.currentElement?.element);\n                this.state.currentIndex++;\n                this.state.currentElement = null;\n                this.speakCurrentSection();\n            },\n            \"skipPrevious\": () => {\n                this.utilities.speechHandler.stop();\n                this.utilities.highlightBox.removeHighlight(this.state.currentElement?.element);\n                this.utilities.textExtractor.clearProcessedElements();\n                this.state.currentElement = this.getPreviousReadableElement(this.state.currentIndex);\n                this.speakCurrentSection();\n            },\n            \"toggleReading\": () => {\n                if (this.utilities.speechHandler.isSpeaking) {\n                    this.utilities.speechHandler.stop();\n                    this.utilities.highlightBox.removeHighlight(this.state.currentElement?.element);\n                } else {\n                    this.speakCurrentSection();\n                }\n            },\n            \"accessLink\": () => {\n                if (this.state.currentElement) {\n                    this.utilities.linkHandler.accessLink(this.state.currentElement.element);\n                    this.utilities.speechHandler.stop();\n                }\n            }\n        };\n\n        const actionHandler = actionMap[request.action];\n        if (actionHandler) {\n            actionHandler();\n        }\n    }\n\n    // Determine if an element is visible and readable\n    isElementVisible(element) {\n        const rect = element.getBoundingClientRect();\n        const computedStyle = window.getComputedStyle(element);\n\n        const isInViewport = rect.top >= 0 && rect.left >= 0;\n        const isNotHidden = computedStyle.visibility !== 'hidden' &&\n                            computedStyle.display !== 'none';\n\n        return isInViewport && isNotHidden;\n    }\n}\n\n// Instantiate the accessibility content handler\nnew AccessibilityContentHandler();","__webpack_require__.h = () => (\"877b3abed96e878bdea3\")"],"names":["HighlightBox","TextExtractor","SpeechHandler","LinkHandler","AccessibilityContentHandler","_classCallCheck","state","currentIndex","currentElement","utilities","highlightBox","textExtractor","speechHandler","linkHandler","elements","_Array$from","document","body","querySelectorAll","setupMessageListener","_createClass","key","value","_context","chrome","runtime","onMessage","addListener","_bindInstanceProperty","handleAccessibilityAction","call","getNextReadableElement","startIndex","i","length","element","isElementVisible","text","extractText","_trimInstanceProperty","getPreviousReadableElement","speakCurrentSection","_this","console","log","_this$state$currentEl","addHighlight","speak","removeHighlight","request","_this2","actionMap","skipNext","_this2$state$currentE","stop","skipPrevious","_this2$state$currentE2","clearProcessedElements","toggleReading","isSpeaking","_this2$state$currentE3","accessLink","actionHandler","action","rect","getBoundingClientRect","computedStyle","window","getComputedStyle","isInViewport","top","left","isNotHidden","visibility","display"],"sourceRoot":""}