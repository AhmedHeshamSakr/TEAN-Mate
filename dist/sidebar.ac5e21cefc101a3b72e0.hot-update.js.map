{"version":3,"file":"sidebar.ac5e21cefc101a3b72e0.hot-update.js","mappings":"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","sources":["webpack://tean-mate/./2-features/STT/ArtyomAssistant.js","webpack://tean-mate/webpack/runtime/getFullHash"],"sourcesContent":["import Artyom from '/node_modules/artyom.js/build/artyom.js';\n\nexport default class ArtyomAssistant {\n    constructor() {\n        this.artyom = new Artyom();\n        this.isListening = false;\n\n        // Set up voice commands\n        this.setupCommands();\n\n        // Set up UI interactions\n        this.setupUI();\n    }\n\n    // Define your voice commands\n    setupCommands() {\n        this.artyom.addCommands([\n            {\n                indexes: [\"text to speech\", \"start reading\"],\n                action: () => {\n                    this.sendCommand(\"tts\");\n                    this.displayAction(\"Text-to-Speech activated!\");\n                }\n            },\n            {\n                indexes: [\"stop reading\", \"pause\"],\n                action: () => {\n                    this.sendCommand(\"tts\");\n                    this.displayAction(\"Text-to-Speech stopped!\");\n                }\n            },\n            {\n                indexes: [\"next section\", \"go next\"],\n                action: () => {\n                    this.sendCommand(\"skipToNext\");\n                    this.displayAction(\"Skipped to next section!\");\n                }\n            },\n            {\n                indexes: [\"previous section\", \"go back\"],\n                action: () => {\n                    this.sendCommand(\"skipToPrevious\");\n                    this.displayAction(\"Went back to previous section!\");\n                }\n            },\n            {\n                indexes: [\"open link\", \"access link\"],\n                action: () => {\n                    this.sendCommand(\"accessLink\");\n                    this.displayAction(\"Accessing current link!\");\n                }\n            },\n            {\n                indexes: [\"sign language\", \"show sign language\"],\n                action: () => {\n                    this.sendCommand(\"signLanguage\");\n                    this.displayAction(\"Sign language activated!\");\n                }\n            },\n            {\n                indexes: [\"image caption\", \"describe image\"],\n                action: () => {\n                    this.sendCommand(\"imageCaption\");\n                    this.displayAction(\"Image captioning activated!\");\n                }\n            }\n        ]);\n\n        // Redirect recognized text to a UI element\n        this.artyom.redirectRecognizedTextOutput((recognized, isFinal) => {\n            const recognizedTextDiv = document.getElementById(\"recognizedText\");\n            if (isFinal) {\n                recognizedTextDiv.textContent = \"text: \" + recognized;\n            } else {\n                recognizedTextDiv.textContent = recognized;\n            }\n        });\n    }\n\n    // Display action messages in a designated UI element\n    displayAction(message) {\n        const recognizedTextDiv = document.getElementById(\"recognizedText\");\n        recognizedTextDiv.textContent = message;\n    }\n\n    // Set up the UI interactions for starting/stopping listening\n    setupUI() {\n        const startButton = document.getElementById(\"start\");\n        startButton.addEventListener(\"click\", () => this.toggleListening());\n    }\n\n    // Start voice recognition\n    startListening() {\n        this.artyom.fatality(); // Stop any previous instance\n        setTimeout(() => {\n            this.artyom.initialize({\n                lang: \"en-US\",\n                continuous: true,\n                listen: true,\n                debug: true,\n                speed: 1,\n            }).then(() => {\n                console.log(\"Artyom is ready to listen!\");\n                this.isListening = true;\n                document.getElementById(\"start\").textContent = \"Stop Listening\";\n            }).catch(err => {\n                console.error(\"Initialization error:\", err);\n                alert(\"Artyom initialization failed. Please check your microphone settings.\");\n            });\n        }, 250);\n    }\n\n    // Stop voice recognition\n    stopListening() {\n        this.artyom.fatality();\n        console.log(\"Artyom has stopped listening.\");\n        this.isListening = false;\n        document.getElementById(\"start\").textContent = \"Start Listening\";\n    }\n\n    // Toggle between starting and stopping the assistant\n    toggleListening() {\n        if (this.isListening) {\n            this.stopListening();\n        } else {\n            this.startListening();\n        }\n    }\n\n    // Handle custom commands sent to the assistant\n    sendCommand(buttonType) {\n        // Placeholder for your custom logic, replace with your actual handlers\n        switch (buttonType) {\n            case \"tts\":\n                console.log(\"Toggle Text-to-Speech\");\n                break;\n            case \"skipToNext\":\n                console.log(\"Skip to Next Section\");\n                break;\n            case \"skipToPrevious\":\n                console.log(\"Skip to Previous Section\");\n                break;\n            case \"accessLink\":\n                console.log(\"Access Link\");\n                break;\n            case \"signLanguage\":\n                console.log(\"Activate Sign Language\");\n                break;\n            case \"imageCaption\":\n                console.log(\"Activate Image Caption\");\n                break;\n        }\n    }\n}\n","__webpack_require__.h = () => (\"cab893970057770b641f\")"],"names":["Artyom","ArtyomAssistant","_classCallCheck","artyom","isListening","setupCommands","setupUI","_createClass","key","value","_this","addCommands","indexes","action","sendCommand","displayAction","redirectRecognizedTextOutput","recognized","isFinal","recognizedTextDiv","document","getElementById","textContent","message","_this2","startButton","addEventListener","toggleListening","startListening","_this3","fatality","_setTimeout","initialize","lang","continuous","listen","debug","speed","then","console","log","err","error","alert","stopListening","buttonType","default"],"sourceRoot":""}